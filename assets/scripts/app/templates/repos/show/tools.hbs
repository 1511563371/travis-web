<div id="tools">
  <a href="#" {{action "menu" target="view"}}></a>
  <ul class="menu">
    <li>
      <a href="#" name="status-images" class="open-popup" {{action "statusImages" target="view"}}>Status Images</a>
    </li>
    {{#if view.displayCancelBuild}}
      <li>
        <a href="#" {{action "cancelBuild" target="view"}}
          {{bindAttr class="view.canCancelBuild::disabled"}}>Cancel Build</a>
      </li>
    {{/if}}
    {{#if view.displayCancelJob}}
      <li>
        <a href="#" {{action "cancelJob" target="view"}}
          {{bindAttr class="view.canCancelJob::disabled"}}>Cancel Job</a>
      </li>
    {{/if}}
    {{#if view.displayRequeueBuild}}
      <li>
        <a href="#" {{action "requeueBuild" target="view"}}
          {{bindAttr class="view.canRequeueBuild::disabled"}}>Restart Build</a>
      </li>
    {{/if}}
    {{#if view.displayRequeueJob}}
      <li>
        <a href="#" {{action "requeueJob" target="view"}}
          {{bindAttr class="view.canRequeueJob::disabled"}}> Restart Job </a>
      </li>
    {{/if}}
    {{#if view.displayRegenerateKey}}
      <li>
        <a href="#" name="regenerate-key"
          {{action "regenerateKeyPopup" target="view"}}
          {{bindAttr class=":open-popup view.canRegenerateKey::disabled"}}>
            Regenerate Key
        </a>
      </li>
    {{/if}}
    {{!TODO: for some reason showDownloadLog, which just delegates to jobIdForLog
             does not refresh 'if' properly, need further investigation}}
    {{#if view.jobIdForLog}}
      <li>
        <a class="download-log" {{bindAttr href="view.plainTextLogUrl"}}>Download log</a>
      </li>
    {{/if}}
    {{#if view.displayCodeClimate}}
      <li>
        <a href="#" name="code-climate"
          {{action "codeClimatePopup" target="view"}}
          {{bindAttr class=":open-popup"}}>
          Code Climate
        </a>
      </li>
    {{/if}}

  </ul>
</div>

<div id="regenerate-key" class="popup">
  <a href="#" class="close" {{action "popupClose" target="view"}}></a>
  <p>
    Do you really want to regenerate ssl keys for this repository? Please note that
    any data, which is encrypted, such as notification services credentials or secure
    environment variables will not be accessible during the builds until you re-encrypt
    it with the new key.
  </p>

  <p>
    <a class="sync_now button" {{action "regenerateKey" target="view"}}>Yes! Do it!</a>
    <span class="or">or</span>
    <a href="#" class="cancel" {{action "popupClose" target="view"}}>Cancel</a>
  </p>
</div>

<div id="regeneration-success" class="popup">
  <a href="#" class="close" {{action "popupClose" target="view"}}></a>
  <p>
    Key for this repository has been regenerated. If you used previous key
    for encryption, you will need encrypt your data again with the new key.
  </p>

  <p>
    You can read more about encryption keys <a href="http://about.travis-ci.org/docs/user/encryption-keys/">in Travis documentation</a>
  </p>
</div>

<div id="code-climate" class="popup">
  <p>
    Integrating <a href="https://codeclimate.com">Code Climate</a>'s code coverage reporting with your test
    suite on Travis CI allows to track changes in coverage over time. It only takes a few steps, once you've set up your project:
  </p>

  <ol>
    <li>
      Add the `code-climate-reporter` gem to your Gemfile:<br/>

<pre>
gem "codeclimate-test-reporter", group: :test, require: nil
</pre>
    </li>
    <li>
      Load the reporter in your `test_helper` or `spec_helper`, putting it at the very top:

<pre>
require "codeclimate-test-reporter"
CodeClimate::TestReporter.start
</pre>
    </li>
    <li>
      Add the Code Climate token to your .travis.yml:

<pre>
env:
  global:
    - CODECLIMATE_REPO_TOKEN=adf08323...
</pre>
    </li>
</div>
